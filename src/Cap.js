/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React from 'react'
import { useGLTF } from '@react-three/drei'

const Cap = (props) => {
  const { nodes, materials } = useGLTF('/cap/cap.gltf')

  function updateHandler() {
    if (props.onChange) {
      props.onChange(nodes);
    }
  }

  return (
    <group {...props} dispose={null} scale={1.5} onUpdate={e => updateHandler()} >
      <mesh geometry={nodes.Crown.geometry} material={materials['Material.001']} material-color={props.customColors.crown} />
      <mesh geometry={nodes.Cape.geometry} material={materials['Material.004']} material-color={props.customColors.cape} visible={props.visibleObjects.cape} />
      <mesh geometry={nodes.Visor.geometry} material={materials['Material.002']} material-color={props.customColors.visor} />
      <mesh geometry={nodes.Top_point.geometry} material={materials['Material.003']} position={[0, 0.93, 0]} scale={[0.04, 0.02, 0.04]} material-color={props.customColors.topPoint} />
    </group>
  )
};

useGLTF.preload('/cap/cap.gltf')

export default Cap;